{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NativeBaseProvider, Container, Header, Title, Box, Label, Item, FormControl, Input, Button } from 'native-base';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Login = function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.login = function (navigation) {\n      fetch('http://127.0.0.1:3333/users/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: _this.state.email,\n          password: _this.state.password\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        if (responseJson.status == 'ok') {\n          var response = fetch('http://127.0.0.1:3333/users/search?email=' + _this.state.email);\n          alert(function (response) {\n            return response.json();\n          });\n        } else {\n          alert(responseJson.message);\n        }\n      }).catch(function (error) {\n        alert(error);\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      return React.createElement(NativeBaseProvider, null, React.createElement(Container, null, React.createElement(Box, {\n        header: true,\n        style: {\n          alignSelf: 'center'\n        }\n      }, React.createElement(Image, {\n        source: require(\"./assets/logo.png\")\n      })), React.createElement(FormControl, {\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        }\n      }, React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Email\"), React.createElement(Input, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(email) {\n          return _this2.setState({\n            email: email\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Password\"), React.createElement(Input, {\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          return _this2.setState({\n            password: password\n          });\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.login(navigation);\n        },\n        mt: \"5\",\n        colorScheme: \"cyan\"\n      }, \"Login\"))));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nexport { Login as default };","map":{"version":3,"sources":["D:/Documents/VagaDev/chamado-sw-front-end/Login.js"],"names":["React","Component","NativeBaseProvider","Container","Header","Title","Box","Label","Item","FormControl","Input","Button","Login","props","login","navigation","fetch","method","headers","Accept","body","JSON","stringify","email","state","password","then","response","json","responseJson","status","alert","message","catch","error","alignSelf","require","paddingLeft","paddingRight","bold","setState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { NativeBaseProvider ,\n\t\tContainer,\n\t\tHeader,\n\t\tTitle,\n\t\tBox,\n\t\tLabel,\n\t\tItem,\n\t\tFormControl, \n        Input,\n\t\tButton } from 'native-base';\nimport { Text, Image } from 'react-native';\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {email: '', password: ''};\n  }\n\n  login = (navigation) => {\n    fetch('http://127.0.0.1:3333/users/login', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n      })\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n      if (responseJson.status == 'ok') {\n\t  const response = fetch('http://127.0.0.1:3333/users/search?email=' + this.state.email)\n\t  \n\t\talert((response) => response.json());\n\n\t  }else {\n        alert(responseJson.message);\n      }\n    })\n    .catch((error) => {\n      alert(error);\n    });\n  }\n\nrender() {\n    const { navigation } = this.props;\n    const { email, password } = this.state;\n    return (\n\t<NativeBaseProvider>\n      <Container>\n        <Box header style={{alignSelf:'center'}}>\n          <Image source={require('./assets/logo.png')} />\n        </Box>\n\n        <FormControl style={{paddingLeft:20, paddingRight:20}}>\n\t\t\t<FormControl.Label _text={{bold: true}}>Email</FormControl.Label>\t\n\t\t\t<Input placeholder=\"Email\" onChangeText={(email) => this.setState({email})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Password</FormControl.Label>\n\t\t\t<Input placeholder=\"Password\" onChangeText={(password) => this.setState({password})}/>\n\t\t\t\n            <Button onPress={() => this.login(navigation)} mt=\"5\" colorScheme=\"cyan\">\n\t\t\t  Login\n\t\t\t</Button>\n        </FormControl>\n      </Container>\n\t </NativeBaseProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}