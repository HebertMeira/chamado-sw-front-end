{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NativeBaseProvider, Container, Header, Title, Box, Label, Item, FormControl, Input, Button } from 'native-base';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport InputDatetimeLocal from 'react-input-datetime-local';\n\nvar Admin = function (_Component) {\n  _inherits(Admin, _Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _super.call(this, props);\n\n    _this.register = function (navigation) {\n      fetch('http://127.0.0.1:3333/solicitations/register', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          problem: _this.state.problem,\n          expectedResult: _this.state.expectedResult,\n          additionalInformation: _this.state.additionalInformation,\n          type: _this.state.type,\n          openingDate: _this.state.openingDate\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        alert('Solicitation registered!');\n      }).catch(function (error) {\n        alert(error);\n      });\n    };\n\n    _this.state = {\n      problem: '',\n      expectedResult: '',\n      additionalInformation: '',\n      type: '',\n      openingDate: ''\n    };\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          problem = _this$state.problem,\n          expectedResult = _this$state.expectedResult,\n          additionalInformation = _this$state.additionalInformation,\n          type = _this$state.type,\n          openingDate = _this$state.openingDate;\n      return React.createElement(NativeBaseProvider, null, React.createElement(Container, null, React.createElement(FormControl, {\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        }\n      }, React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Problema Enfrentado\"), React.createElement(Input, {\n        placeholder: \"Problema Enfrentado\",\n        onChangeText: function onChangeText(problem) {\n          return _this2.setState({\n            problem: problem\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Resultado Esperado\"), React.createElement(Input, {\n        placeholder: \"Resultado Esperado\",\n        onChangeText: function onChangeText(expectedResult) {\n          return _this2.setState({\n            expectedResult: expectedResult\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Informa\\xE7\\xF5es Complementares\"), React.createElement(Input, {\n        placeholder: \"Informa\\xE7\\xF5es Complementares\",\n        onChangeText: function onChangeText(additionalInformation) {\n          return _this2.setState({\n            additionalInformation: additionalInformation\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Tipo\"), React.createElement(Input, {\n        placeholder: \"Tipo\",\n        onChangeText: function onChangeText(type) {\n          return _this2.setState({\n            type: type\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Data da Solicita\\xE7\\xE3o\"), React.createElement(InputDatetimeLocal, {\n        output: Date.now(),\n        onChange: function onChange(openingDate) {\n          return _this2.setState({\n            openingDate: openingDate\n          });\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Data da Solicita\\xE7\\xE3o\",\n        onChangeText: function onChangeText(openingDate) {\n          return _this2.setState({\n            openingDate: openingDate\n          });\n        }\n      }), React.createElement(Button, {\n        onPress: function onPress() {\n          return _this2.register(navigation);\n        },\n        mt: \"5\",\n        colorScheme: \"cyan\"\n      }, \"Cadastrar\"))));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport { Admin as default };","map":{"version":3,"sources":["D:/Documents/VagaDev/chamado-sw-front-end/Admin.js"],"names":["React","Component","NativeBaseProvider","Container","Header","Title","Box","Label","Item","FormControl","Input","Button","InputDatetimeLocal","Admin","props","register","navigation","fetch","method","headers","Accept","body","JSON","stringify","problem","state","expectedResult","additionalInformation","type","openingDate","then","response","json","responseJson","alert","catch","error","paddingLeft","paddingRight","bold","setState","Date","now"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NativeBaseProvider ,\n\t\tContainer,\n\t\tHeader,\n\t\tTitle,\n\t\tBox,\n\t\tLabel,\n\t\tItem,\n\t\tFormControl, \n        Input,\n\t\tButton } from 'native-base';\nimport { Text, Image } from 'react-native';\nimport InputDatetimeLocal from 'react-input-datetime-local';\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {problem: '', expectedResult: '', additionalInformation: '', type: '', openingDate: ''};\n  }\n  \n  register = (navigation) => {\n    fetch('http://127.0.0.1:3333/solicitations/register', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        problem: this.state.problem,\n        expectedResult: this.state.expectedResult,\n\t\tadditionalInformation: this.state.additionalInformation,\n\t\ttype: this.state.type,\n\t\topeningDate: this.state.openingDate\n      })\n    })\n    .then((response) => response.json())\n    .then((responseJson) => {\n\t\talert('Solicitation registered!');\n\t\t    })\n    .catch((error) => {\n      alert(error);\n    });\n  }\n  \n  render() {\n    const { navigation } = this.props;\n    const { problem, expectedResult, additionalInformation, type, openingDate } = this.state;\n    return (\n\t<NativeBaseProvider>\n      <Container>\n        <FormControl style={{paddingLeft:20, paddingRight:20}}>\n\t\t\t<FormControl.Label _text={{bold: true}}>Problema Enfrentado</FormControl.Label>\t\n\t\t\t<Input placeholder=\"Problema Enfrentado\" onChangeText={(problem) => this.setState({problem})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Resultado Esperado</FormControl.Label>\n\t\t\t<Input placeholder=\"Resultado Esperado\" onChangeText={(expectedResult) => this.setState({expectedResult})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Informações Complementares</FormControl.Label>\n\t\t\t<Input placeholder=\"Informações Complementares\" onChangeText={(additionalInformation) => this.setState({additionalInformation})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Tipo</FormControl.Label>\n\t\t\t<Input placeholder=\"Tipo\" onChangeText={(type) => this.setState({type})}/>\n\n\t\t\t<FormControl.Label _text={{bold: true}}>Data da Solicitação</FormControl.Label>\n\t\t\t<InputDatetimeLocal\n                    output={Date.now()}\n                    onChange={(openingDate) => this.setState({openingDate})}\n                />\n\t\t\t<Input placeholder=\"Data da Solicitação\" onChangeText={(openingDate) => this.setState({openingDate})}/>\n\t\t\t\n\t\t\t<Button onPress={() => this.register(navigation)} mt=\"5\" colorScheme=\"cyan\">\n\t\t\t  Cadastrar\n\t\t\t</Button>\n        </FormControl>\n      </Container>\n\t </NativeBaseProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}