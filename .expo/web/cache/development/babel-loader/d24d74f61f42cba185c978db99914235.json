{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { NativeBaseProvider, Container, Header, Title, Box, Label, Item, FormControl, Input, Button } from 'native-base';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar Admin = function (_Component) {\n  _inherits(Admin, _Component);\n\n  var _super = _createSuper(Admin);\n\n  function Admin(props) {\n    var _this;\n\n    _classCallCheck(this, Admin);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      problem: '',\n      expectedResult: '',\n      additionalInformation: '',\n      type: '',\n      openingDate: ''\n    };\n    return _this;\n  }\n\n  _createClass(Admin, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var navigation = this.props.navigation;\n      var _this$state = this.state,\n          problem = _this$state.problem,\n          expectedResult = _this$state.expectedResult,\n          additionalInformation = _this$state.additionalInformation,\n          type = _this$state.type,\n          openingDate = _this$state.openingDate;\n      return React.createElement(NativeBaseProvider, null, React.createElement(Container, null, React.createElement(FormControl, {\n        style: {\n          paddingLeft: 20,\n          paddingRight: 20\n        }\n      }, React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Problema Enfrentado\"), React.createElement(Input, {\n        placeholder: \"Problema Enfrentado\",\n        onChangeText: function onChangeText(problem) {\n          return _this2.setState({\n            problem: problem\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Resultado Esperado\"), React.createElement(Input, {\n        placeholder: \"Resultado Esperado\",\n        onChangeText: function onChangeText(expectedResult) {\n          return _this2.setState({\n            expectedResult: expectedResult\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Informa\\xE7\\xF5es Complementares\"), React.createElement(Input, {\n        placeholder: \"Resultado Esperado\",\n        onChangeText: function onChangeText(additionalInformation) {\n          return _this2.setState({\n            additionalInformation: additionalInformation\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Tipo\"), React.createElement(Input, {\n        placeholder: \"Resultado Esperado\",\n        onChangeText: function onChangeText(type) {\n          return _this2.setState({\n            type: type\n          });\n        }\n      }), React.createElement(FormControl.Label, {\n        _text: {\n          bold: true\n        }\n      }, \"Data da Solicita\\xE7\\xE3o\"), React.createElement(Input, {\n        placeholder: \"Resultado Esperado\",\n        onChangeText: function onChangeText(openingDate) {\n          return _this2.setState({\n            openingDate: openingDate\n          });\n        }\n      }))));\n    }\n  }]);\n\n  return Admin;\n}(Component);\n\nexport { Admin as default };","map":{"version":3,"sources":["D:/Documents/VagaDev/chamado-sw-front-end/Admin.js"],"names":["React","Component","NativeBaseProvider","Container","Header","Title","Box","Label","Item","FormControl","Input","Button","Admin","props","state","problem","expectedResult","additionalInformation","type","openingDate","navigation","paddingLeft","paddingRight","bold","setState"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { NativeBaseProvider ,\n\t\tContainer,\n\t\tHeader,\n\t\tTitle,\n\t\tBox,\n\t\tLabel,\n\t\tItem,\n\t\tFormControl, \n        Input,\n\t\tButton } from 'native-base';\nimport { Text, Image } from 'react-native';\n\nexport default class Admin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {problem: '', expectedResult: '', additionalInformation: '', type: '', openingDate: ''};\n  }\n  \n  render() {\n    const { navigation } = this.props;\n    const { problem, expectedResult, additionalInformation, type, openingDate } = this.state;\n    return (\n\t<NativeBaseProvider>\n      <Container>\n        <FormControl style={{paddingLeft:20, paddingRight:20}}>\n\t\t\t<FormControl.Label _text={{bold: true}}>Problema Enfrentado</FormControl.Label>\t\n\t\t\t<Input placeholder=\"Problema Enfrentado\" onChangeText={(problem) => this.setState({problem})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Resultado Esperado</FormControl.Label>\n\t\t\t<Input placeholder=\"Resultado Esperado\" onChangeText={(expectedResult) => this.setState({expectedResult})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Informações Complementares</FormControl.Label>\n\t\t\t<Input placeholder=\"Resultado Esperado\" onChangeText={(additionalInformation) => this.setState({additionalInformation})}/>\n\t\t\t\n\t\t\t<FormControl.Label _text={{bold: true}}>Tipo</FormControl.Label>\n\t\t\t<Input placeholder=\"Resultado Esperado\" onChangeText={(type) => this.setState({type})}/>\n\n\t\t\t<FormControl.Label _text={{bold: true}}>Data da Solicitação</FormControl.Label>\n\t\t\t<Input placeholder=\"Resultado Esperado\" onChangeText={(openingDate) => this.setState({openingDate})}/>\n        </FormControl>\n      </Container>\n\t </NativeBaseProvider>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}